riml_include 'spec_helper'
riml_include 'container'
riml_include 'command_registry'
riml_include 'buffer'
riml_include 'project'
riml_include 'buffer_collection'
riml_include 'project_collection'
riml_include 'goto_definition_command'
riml_include 'with_dir'
riml_include 'tag_list_matcher'
riml_include 'ctags_builder'
riml_include 'ctags_command_builder'
riml_include 'leet_convertor'

class MockTagListMatcher
  defm match(keyword)
    return self.mock_match
  end
end

class GotoDefinitionCommandSpec
  defm before_each
    self.container = new Container({})
    self.container.register('project', 'Project', false)
    self.container.register('buffer_collection', 'BufferCollection', true)
    self.container.register('project_collection', 'ProjectCollection', true)
    self.container.register('with_dir', 'WithDir', false)
    self.container.register('tag_list_matcher', 'MockTagListMatcher', true)
    self.container.register('ctags_builder', 'CTagsBuilder', true)
    self.container.register('ctags_command_builder', 'CTagsCommandBuilder', true)
    self.container.register('leet_convertor', 'LeetConvertor', true)
    self.command = new GotoDefinitionCommand(self.container)

    self.project_collection = self.container.lookup('project_collection')
    self.buffer_collection = self.container.lookup('buffer_collection')
    self.ctags_builder = self.container.lookup('ctags_builder')
    self.ctags_builder.set_project_path(g:WORDPRESS_DIR)
  end

  defm it_has_ex_mode
    expect(self.command.has_ex_mode()).to_be_true()
  end

  defm it_does_not_auto_register_self
    expect(self.command.get_auto_register()).to_be_false()
  end

  defm it_allows_range
    expect(self.command.get_range()).to_be_true()
  end

  defm it_can_build_jump_cmd
    expect(self.command.get_jump_cmd('foo', 2)).to_equal(":3tag foo")
  end

  defm it_can_build_jump_cmd_without_position
    expect(self.command.get_jump_cmd('foo', 0)).to_equal(":tag foo")
  end
end

